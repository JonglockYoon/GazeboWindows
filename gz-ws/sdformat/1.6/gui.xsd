<?xml version='1.0' encoding='UTF-8'?>
<xsd:schema xmlns:xsd='http://www.w3.org/2001/XMLSchema'>
  <xsd:include schemaLocation='http://sdformat.org/schemas/types.xsd'/>
  <xsd:include schemaLocation='http://sdformat.org/schemas/plugin.xsd'/>
  <xsd:element name='gui'>
    <xsd:complexType>
      <xsd:choice maxOccurs='unbounded'>
        <xsd:choice  minOccurs='0' maxOccurs='1'>
        <xsd:element name='camera'>
          <xsd:annotation>
            <xsd:documentation xml:lang='en'>
              <![CDATA[ ]]>
            </xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:choice maxOccurs='unbounded'>
              <xsd:choice  minOccurs='0' maxOccurs='1'>
              <xsd:element name='view_controller' type='xsd:string'>
              </xsd:element>
              </xsd:choice>
              <xsd:choice  minOccurs='0' maxOccurs='1'>
              <xsd:element name='projection_type' type='xsd:string'>
                <xsd:annotation>
                  <xsd:documentation xml:lang='en'>
                    <![CDATA[Set the type of projection for the camera. Valid values are "perspective" and "orthographic".]]>
                  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              </xsd:choice>
              <xsd:choice  minOccurs='0' maxOccurs='1'>
              <xsd:element name='track_visual'>
                <xsd:complexType>
                  <xsd:choice maxOccurs='unbounded'>
                    <xsd:choice  minOccurs='0' maxOccurs='1'>
                    <xsd:element name='name' type='xsd:string'>
                      <xsd:annotation>
                        <xsd:documentation xml:lang='en'>
                          <![CDATA[Name of the tracked visual. If no name is provided, the remaining settings will be applied whenever tracking is triggered in the GUI.]]>
                        </xsd:documentation>
                      </xsd:annotation>
                    </xsd:element>
                    </xsd:choice>
                    <xsd:choice  minOccurs='0' maxOccurs='1'>
                    <xsd:element name='min_dist' type='xsd:double'>
                      <xsd:annotation>
                        <xsd:documentation xml:lang='en'>
                          <![CDATA[Minimum distance between the camera and the tracked visual. This parameter is only used if static is set to false.]]>
                        </xsd:documentation>
                      </xsd:annotation>
                    </xsd:element>
                    </xsd:choice>
                    <xsd:choice  minOccurs='0' maxOccurs='1'>
                    <xsd:element name='max_dist' type='xsd:double'>
                      <xsd:annotation>
                        <xsd:documentation xml:lang='en'>
                          <![CDATA[Maximum distance between the camera and the tracked visual. This parameter is only used if static is set to false.]]>
                        </xsd:documentation>
                      </xsd:annotation>
                    </xsd:element>
                    </xsd:choice>
                    <xsd:choice  minOccurs='0' maxOccurs='1'>
                    <xsd:element name='static' type='xsd:boolean'>
                      <xsd:annotation>
                        <xsd:documentation xml:lang='en'>
                          <![CDATA[If set to true, the position of the camera is fixed relatively to the model or to the world, depending on the value of the use_model_frame element. Otherwise, the position of the camera may vary but the distance between the camera and the model will depend on the value of the min_dist and max_dist elements. In any case, the camera will always follow the model by changing its orientation.]]>
                        </xsd:documentation>
                      </xsd:annotation>
                    </xsd:element>
                    </xsd:choice>
                    <xsd:choice  minOccurs='0' maxOccurs='1'>
                    <xsd:element name='use_model_frame' type='xsd:boolean'>
                      <xsd:annotation>
                        <xsd:documentation xml:lang='en'>
                          <![CDATA[If set to true, the position of the camera is relative to the model reference frame, which means that its position relative to the model will not change. Otherwise, the position of the camera is relative to the world reference frame, which means that its position relative to the world will not change. This parameter is only used if static is set to true.]]>
                        </xsd:documentation>
                      </xsd:annotation>
                    </xsd:element>
                    </xsd:choice>
                    <xsd:choice  minOccurs='0' maxOccurs='1'>
                    <xsd:element name='xyz' type='vector3'>
                      <xsd:annotation>
                        <xsd:documentation xml:lang='en'>
                          <![CDATA[The position of the camera's reference frame. This parameter is only used if static is set to true. If use_model_frame is set to true, the position is relative to the model reference frame, otherwise it represents world coordinates.]]>
                        </xsd:documentation>
                      </xsd:annotation>
                    </xsd:element>
                    </xsd:choice>
                    <xsd:choice  minOccurs='0' maxOccurs='1'>
                    <xsd:element name='inherit_yaw' type='xsd:boolean'>
                      <xsd:annotation>
                        <xsd:documentation xml:lang='en'>
                          <![CDATA[If set to true, the camera will inherit the yaw rotation of the tracked model. This parameter is only used if static and use_model_frame are set to true.]]>
                        </xsd:documentation>
                      </xsd:annotation>
                    </xsd:element>
                    </xsd:choice>
                  </xsd:choice>
                </xsd:complexType>
              </xsd:element>
              </xsd:choice>
            </xsd:choice>
            <xsd:attribute name='name' type='xsd:string' use='required' >
            </xsd:attribute>
          </xsd:complexType>
        </xsd:element>
        </xsd:choice>
        <xsd:element ref='plugin'/>
      </xsd:choice>
      <xsd:attribute name='fullscreen' type='xsd:boolean' use='optional' default='false'>
      </xsd:attribute>
    </xsd:complexType>
  </xsd:element>
</xsd:schema>
